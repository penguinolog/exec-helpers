# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
minversion = 2.0
envlist = pep8, pylint, mypy, bandit, pep257, py{27,py}, docs
skipsdist = True
skip_missing_interpreters = True

[testenv]
recreate = True
usedevelop = False
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY
setev = PYTHONDONTWRITEBYTECODE=1
deps =
  sphinx
  pytest
  pytest-mock
  pytest-cov
  pytest-html
  pytest-sugar
  -r{toxinidir}/CI_REQUIREMENTS.txt
  py{27,py}: mock

commands =
  pip freeze
  python setup.py develop -v
  py.test --junitxml=unit_result.xml --cov-report html --self-contained-html --html=report.html --cov-config .coveragerc --cov=exec_helpers {posargs:test}
  coverage report --fail-under 97

[testenv:venv]
commands = {posargs:}

[tox:travis]
2.7 = install, py27,
pypy = install, pypy,

[testenv:pep8]
deps =
  flake8
  flake8-future-import
commands = flake8

[testenv:pep257]
deps =
  pydocstyle
commands = pydocstyle -v exec_helpers

[testenv:install]
deps =
commands = pip install ./ -vvv -U

[testenv:pylint]
basepython=python2
usedevelop = False
deps =
  pylint<2
  isort[pyproject,requirements]
  -r{toxinidir}/CI_REQUIREMENTS.txt
commands = pylint exec_helpers

[flake8]
exclude =
  .venv,
  .git,
  .tox,
  dist,
  doc,
  *lib/python*,
  *egg,
  build,
  __init__.py,
  docs
ignore =
# whitespace before ':'
  E203,
# line break before binary operator
  W503,
# Expected
# __future__ import "division" present
  FI50
# __future__ import "absolute_import" present
  FI51
# Setup only:
# __future__ import "print_function" present
  FI53
# __future__ import "unicode_literals" present
  FI54

# Expected missind (not used or required for not supported versions):
# __future__ import "division" missing
  FI10
# __future__ import "with_statement" missing
  FI12
# __future__ import "print_function" missing
  FI13
# __future__ import "generator_stop" missing
  FI15
# __future__ import "nested_scopes" missing
  FI16
# __future__ import "generators" missing
  FI17
#__future__ import "annotations" missing
  FI18
# line break before binary operator
  W503
# First line should be in imperative mood; try rephrasing
  D401
# No blank lines allowed after function docstring
  D202
# 1 blank line required before class docstring
  D203
# Multi-line docstring summary should start at the second line
  D213
show-pep8 = True
show-source = True
count = True
max-line-length = 120

[pydocstyle]
ignore =
  D401,
  D202,
  D203,
  D213
# First line should be in imperative mood; try rephrasing
# No blank lines allowed after function docstring
# 1 blank line required before class docstring
# Multi-line docstring summary should start at the second line

[testenv:docs]
usedevelop = False
deps =
  sphinx
commands = python setup.py build_sphinx

[testenv:bandit]
deps = bandit
commands = bandit -r exec_helpers

[testenv:black]
deps =
  black
commands =
  black exec_helpers

[testenv:dep-graph]
deps =
  .
  pipdeptree
commands = pipdeptree

[testenv:mypy]
deps =
  mypy>=0.700
  lxml
  -r{toxinidir}/CI_REQUIREMENTS.txt
commands = mypy --strict --xslt-html-report mypy_report -p exec_helpers


[testenv:isort]
deps =
  isort[pyproject,requirements]
commands =
  isort -rc exec_helpers
