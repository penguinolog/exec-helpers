# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
minversion = 2.0
envlist = pep8, pylint, mypy, bandit, pep257, py{35,36,37,py3}, docs, py{35,36,37}-nocov
skipsdist = True
skip_missing_interpreters = True

[testenv]
recreate = True
usedevelop = True
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY
setev = PYTHONDONTWRITEBYTECODE=1
deps =
    sphinx
    asynctest
    pytest
    pytest-asyncio
    pytest-mock
    pytest-cov
    pytest-html
    pytest-sugar
    py{34,35,36,37}-nocov: Cython
    -r{toxinidir}/CI_REQUIREMENTS.txt

commands =
    pip freeze
    py.test --junitxml=unit_result.xml --cov-report html --self-contained-html --html=report.html --cov-config .coveragerc --cov=exec_helpers {posargs:test}
    coverage report --fail-under 97

[testenv:py35-nocov]
usedevelop = False
commands =
    python setup.py bdist_wheel
    pip install exec_helpers --no-index -f dist
    py.test -vvv {posargs:test}

[testenv:py36-nocov]
usedevelop = False
commands =
    python setup.py bdist_wheel
    pip install exec_helpers --no-index -f dist
    py.test -vvv {posargs:test}

[testenv:py37-nocov]
usedevelop = False
commands =
    python setup.py bdist_wheel
    pip install exec_helpers --no-index -f dist
    py.test -vvv {posargs:test}

[testenv:venv]
commands = {posargs:}

[tox:travis]
3.4 = py34,
3.5 = py35,
3.6 = py36,
3.7 = py37,
pypy3 = install, pypy3,

[testenv:pep8]
deps =
    flake8
    flake8-bugbear

usedevelop = False
commands = flake8

[testenv:pep257]
deps =
    pydocstyle
usedevelop = False
commands = pydocstyle -v exec_helpers

[testenv:install]
deps =
usedevelop = False
commands = pip install ./ -vvv -U

[testenv:pylint]
usedevelop = False
deps =
    pylint>=2
    -r{toxinidir}/CI_REQUIREMENTS.txt
commands = pylint exec_helpers

[flake8]
exclude =
    .venv,
    .git,
    .tox,
    dist,
    doc,
    *lib/python*,
    *egg,
    build,
    __init__.py,
    docs
ignore =
    E203,
    W503
# whitespace before ':'
# line break before binary operator
show-pep8 = True
show-source = True
count = True
max-line-length = 120

[pydocstyle]
ignore =
    D401,
    D202,
    D203,
    D213
# First line should be in imperative mood; try rephrasing
# No blank lines allowed after function docstring
# 1 blank line required before class docstring
# Multi-line docstring summary should start at the second line

[testenv:docs]
deps =
    sphinx
commands = python setup.py build_sphinx

[testenv:bandit]
deps = bandit
commands = bandit -r exec_helpers

[testenv:black]
deps =
    black
usedevelop = False
commands =
    black exec_helpers

[testenv:dep-graph]
deps =
    .
    pipdeptree
commands = pipdeptree

[testenv:mypy]
deps =
    mypy>=0.660
    lxml
    -r{toxinidir}/CI_REQUIREMENTS.txt
commands = mypy --strict --xslt-html-report mypy_report -p exec_helpers
